name: Test Actions Objects
on: [push, workflow_dispatch]
# Allows you to run this workflow manually from the Actions tab
jobs:
  job_one:
    needs: job_output-test
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: show env
        run: |
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID."
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER."
          echo "GITHUB_JOB: $GITHUB_JOB."
        
  job_prod-check:
    needs: [job_output-test, job_one]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: check
        run: |
          echo "Deploying to production server on branch $GITHUB_REF"
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID."
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER."
          echo "GITHUB_JOB: $GITHUB_JOB."
      
  job_output-test:
    name: job of output testing
    runs-on: ubuntu-latest
    env:
      job_name: job of output testing
    steps:
      - name: Set my pets name
        run: |
            echo '::set-output name=DogName::erhei'
            echo '::set-output name=CatName::tommy'
            echo "GITHUB_RUN_ID: $GITHUB_RUN_ID."
            echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER."
            echo "GITHUB_JOB: $GITHUB_JOB."
        id: set-my-pets-name
        env:
          step_name: Set my pets name
      - name: Get my pets name
        run: echo "My dog name is ${{steps.set-my-pets-name.outputs.DogName}}. My cat name is ${{steps.set-my-pets-name.outputs.CatName}}."
        
  job_env-test:
    needs: job_output-test
    name: job of env testing
    runs-on: ubuntu-latest
    env:
      my_dog_name: erhei
      my_cat_name: tommy
    steps:
      - name: "Heel world when it's erhei"
        if: ${{ env.my_dog_name == 'erhei' }}
        run: |
          echo "Hello $my_name, Your dog's name is erhei! ${{ env.my_cat_name }} is also nice."
        env:
         my_name: raye
      - name: show the git ENVs
        run: |
          echo "CI: $CI."
          echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW."
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID."
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER."
          echo "GITHUB_JOB: $GITHUB_JOB."
          echo "GITHUB_ACTION: $GITHUB_ACTION."
          echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH."
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS."
          echo "GITHUB_ACTOR: $GITHUB_ACTOR."
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY."
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME."
          echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH."
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE."
          echo "GITHUB_SHA: $GITHUB_SHA."
          echo "GITHUB_REF: $GITHUB_REF."
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF."
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF."
          echo "GITHUB_SERVER_URL: $GITHUB_SERVER_URL."
          echo "GITHUB_API_URL: $GITHUB_API_URL."
          echo "GITHUB_GRAPHQL_URL: $GITHUB_GRAPHQL_URL." 
          
  job_run_func_test:
    needs: job_output-test
    name: run a func test
    runs-on: ubuntu-latest
    steps:
      - name: pass env to func
        run: |
          #pip install pytest
          echo $(pwd)
          echo $(ls)
          echo $(ls ../)
          echo $(ls ../../)
          echo $(ls ../../../)
          python run_test.py --github_run_id $GITHUB_RUN_ID --github_run_number $GITHUB_RUN_NUMBER --sha $GITHUB_SHA
          #python test_example.py
      
      
