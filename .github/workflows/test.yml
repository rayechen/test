name: Test Actions Objects
on: push
jobs:
  job_one:
    needs: job_output-test
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
        
  job_prod-check:
    needs: [job_output-test, job_one]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying to production server on branch $GITHUB_REF"
      
  job_output-test:
    name: job of output testing
    runs-on: ubuntu-latest
    steps:
      - name: Set my pets name
        run: |
            echo '::set-output name=DogName::erhei'
            echo '::set-output name=CatName::tommy'
        id: set-my-pets-name
      - name: Get my pets name
        run: echo "My dog name is ${{steps.set-my-pets-name.outputs.DogName}}. My cat name is ${{steps.set-my-pets-name.outputs.CatName}}."
        
  job_env-test:
    needs: job_output-test
    name: job of env testing
    runs-on: ubuntu-latest
    env:
      my_dog_name: erhei
      my_cat_name: tommy
    steps:
      - name: "Heel world when it's erhei"
        if: ${{ env.my_dog_name == 'erhei' }}
        run: echo "Hello $my_name, Your dog's name is erhei! {{$ env.my_cat_name }} is also nice."
        env:
         my_name: raye
      
      
      
